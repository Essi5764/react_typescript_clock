{"version":3,"sources":["components/Clock.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Clock","props","state","time","Date","this","setState","setTimeout","tick","toLocaleTimeString","React","Component","App","className","testProp","optionalProp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPA2CeA,E,kDA5BX,WAAYC,GAAsB,IAAD,8BAC7B,cAAMA,IACDC,MAAO,CAACC,KAAM,IAAIC,MAFM,E,wCAKjC,WACIC,KAAKC,SAAS,CACVH,KAAK,IAAIC,S,+BAQjB,WAAoB,IAAD,OACfG,YAAW,kBAAM,EAAKC,SAAQ,O,oBAGlC,WACI,OACI,8BACI,6BAAKH,KAAKH,MAAMC,KAAKM,6B,GAvBjBC,IAAMC,WCKXC,EAVsB,WACnC,OACE,qBAAKC,UAAU,MAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,cAAC,EAAD,CAAOC,SARQ,8CAQYC,aAPR,sBCQZC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f33e0cfb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ntype ClockState = {\r\n    time:Date\r\n};\r\n\r\n\r\ntype AcceptedProps = {\r\n    testProp:string,\r\n    optionalProp?:string\r\n};\r\n\r\n\r\n\r\nclass Clock extends React.Component<AcceptedProps, ClockState> {\r\n    constructor(props:AcceptedProps) {\r\n        super(props)\r\n        this.state ={time: new Date()}\r\n    }\r\n\r\n    tick(){\r\n        this.setState({\r\n            time:new Date()\r\n        })\r\n    };\r\n\r\n    //componentWillMount() {\r\n    //    this.tick();\r\n    //};\r\n\r\n    componentDidMount(){\r\n        setTimeout(() => this.tick(), 1000);\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h1>{this.state.time.toLocaleTimeString()}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Clock;","import React from 'react';\nimport './App.css';\nimport Clock from './components/Clock';\n\n\nlet testProp: string = 'Am I getting passed to the Clock component?'\nlet optionalProp: string = 'You sure are';\n\n\nconst App: React.FunctionComponent = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"verticalCenter\">\n        <Clock testProp={testProp} optionalProp={optionalProp}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}